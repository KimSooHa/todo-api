plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.testcontainers:testcontainers-bom:1.20.2'
	testImplementation 'org.testcontainers:testcontainers:1.17.6'
	testImplementation 'org.testcontainers:mysql:1.19.6'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'io.rest-assured:rest-assured:5.3.0'
	testImplementation 'io.rest-assured:json-path:5.3.0'
	testImplementation 'io.rest-assured:xml-path:5.3.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'

	// JPA 관련 jakarta 패키지 사용
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'

	implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'

}

// Testcontainers BOM 추가 (버전 자동 관리)
dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:1.19.3"
	}
}

tasks.withType(JavaCompile) {
	options.compilerArgs << "-parameters"
}

// querydsl
// QueryDSL Q클래스가 소스셋에 포함되도록 설정
sourceSets {
	main.java.srcDirs += "$buildDir/generated/sources/annotationProcessor/java/main"
}


dependencies {
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
}

tasks.named('test') {
	useJUnitPlatform()
}
